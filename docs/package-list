$dokka.format:gfm
$dokka.linkExtension:md
$dokka.location:com.vperi.promise$catch(kotlinx.coroutines.experimental.Deferred((com.vperi.promise.catch.T)), kotlin.coroutines.experimental.CoroutineContext, kotlin.SuspendFunction1((kotlin.Throwable, com.vperi.promise.catch.T)))com.vperi.promise/kotlinx.coroutines.experimental.-deferred/catch.md
$dokka.location:com.vperi.promise$finally(kotlinx.coroutines.experimental.Deferred((com.vperi.promise.finally.T)), kotlin.coroutines.experimental.CoroutineContext, kotlin.SuspendFunction1((com.vperi.promise.DeferredResult((com.vperi.promise.finally.T)), com.vperi.promise.finally.V)))com.vperi.promise/kotlinx.coroutines.experimental.-deferred/finally.md
$dokka.location:com.vperi.promise$result(kotlinx.coroutines.experimental.Deferred((com.vperi.promise.result.T)))com.vperi.promise/kotlinx.coroutines.experimental.-deferred/result.md
$dokka.location:com.vperi.promise$then(kotlinx.coroutines.experimental.Deferred((com.vperi.promise.then.T)), kotlin.coroutines.experimental.CoroutineContext, kotlin.SuspendFunction1((com.vperi.promise.then.T, com.vperi.promise.then.V)))com.vperi.promise/kotlinx.coroutines.experimental.-deferred/then.md
$dokka.location:com.vperi.promise$then(kotlinx.coroutines.experimental.Deferred((com.vperi.promise.then.T)), kotlin.coroutines.experimental.CoroutineContext, kotlin.SuspendFunction1((com.vperi.promise.then.T, com.vperi.promise.then.V)), kotlin.SuspendFunction1((kotlin.Throwable, com.vperi.promise.then.V)))com.vperi.promise/kotlinx.coroutines.experimental.-deferred/then.md
$dokka.location:com.vperi.promise$then(kotlinx.coroutines.experimental.Deferred((kotlin.Nothing)), kotlin.coroutines.experimental.CoroutineContext, kotlin.SuspendFunction1((kotlin.Unit, com.vperi.promise.then.V)))com.vperi.promise/kotlinx.coroutines.experimental.-deferred/then.md
$dokka.location:com.vperi.promise$then(kotlinx.coroutines.experimental.Deferred((kotlinx.coroutines.experimental.Deferred((com.vperi.promise.then.T)))), kotlin.coroutines.experimental.CoroutineContext, kotlin.SuspendFunction1((com.vperi.promise.then.T, com.vperi.promise.then.V)))com.vperi.promise/kotlinx.coroutines.experimental.-deferred/then.md
com.vperi.promise
